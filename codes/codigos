# Passo a Passo | Preparar o Ambiente para o trabalho do dia 

# Banco de Dados Mysql | Docker Image

**Baixando a Imagem do MYSQL**

- *d run --name galatians -d -e MYSQL_ROOT_PASSWORD=lovethepoor -p 3306:3306 mysql:8.0.22.* (Baixa a imagem do mysql)

**Criando um novo banco de dados**

- *d exec -it galatians mysql -uroot -p* (Entra no banco de dados do Mysql)
- *show databases;* (Ver os bancos existentes)
- *create database lportal;* (cria o banco de dados)
*exit* (precisa sair apos criar o lportal)
- *drop database 'nome';* (exclui o banco de dados)

# Preparando o ambiente de trabalho (fluxo de trablaho inicial)**

1- Entrando no repositorio do Portal e refazendo o catalina

- ***cdt*** (ir para o repositorio liferay-portal)
- ***ant clean*** (limpar o banco)
***ant all*** (refazer o portal no catalina)

# Observacao !!

se der algum erro apos refazer o portal, fazer o passo 2 do **Subindo o portal e rodando o Banco de dados no Docker** ou utilizar o comando de [***ps aux | grep java***]. **para ver os processos em execucao e poder para-los**

2- Atualizando os Repositorios Local e remoto

- ***g pull upstream master*** (para atualizar os codigos no repositorio local)
- ***g push origin master*** (para atualizar o codigo no Github)

3- Trabalhando com ticket - colocando as informacoes do jira no VScode

***Boards*** aba para abrir o Kaban do **Workflow|Test Automation** com os Ticket's

4- Criando a branch baseado no titulo do Jira

***g co -b 'NomeBranch'*** (cria a branch e entra nela)

5- Comandos para manipular as branch's !!!

- ***g br*** (vai listar as branch's)
***g co 'NomeBranch'*** (vai mudar a branch)
***g br -D 'NomeBranch'*** (vai apagar a branch)
***git cherry-pick 'codigo do comit'*** (adicione aqui sem as aspas o codigo do comit de outra branch para transferir para a sua atual branch)
***git merge master*** (adiciona todas as alteracoes de comit's feitos em outras branchs e tras para a atual, diferente do g cp acima que ira trazer apenas o que voce escolher)
***git rebase master*** (todos os comit's da master ficarao abaixo dos comits feitos por mim na atual branch)

6- Depois de criar a branch, vamos manipular o teset no VScode

- ***code .*** (exucutar esse comando dentro da branch (para abrir o VScode e trabalhar o codigo))
- ***Crtl + p*** (dar esse comando dentro do VScode e pegar nome do arquivo de .testcase e coloca na pesquisa)
- ***Crtl + f*** (dar esse comando dentro do arquivo.testcase e encontrar o caso de teste dentro dele)
- ***apos encontrar o caso de test*** dentro do arquivo.testcase apagar os seguintes linhas de Codigo para comecar a montar o teste

# Para rodar o arquivo e fazer o teste voce precisa colocar o seguinte codigo

- ***ant -f build-test.xml run-selenium-test -Dtest.class=*** (apos = coloque o nome do testcase sem o .testcase + o simbolo de # e em seguida coloque o nome do teste que voce quer que seja testado)
*ex*: ant -f build-test.xml run-selenium-test -Dtest.class=SEO#Can



# Passo a passo 
# 1 ABA
1- *cdt*
2- *g pull upstream master*
3- *g push origin master*
4- *ant clean*
8- *ant all*
9- *catalina* (./catalina.sh jpda run)

# 2 ABA
5- *d start galatians*
6- *d exec -it galatians mysql -uroot -p*
7- *create database lportal;*
